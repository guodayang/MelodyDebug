// Copyright (c) 2012 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_WEB_URLREQUEST_CLIENT_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_WEB_URLREQUEST_CLIENT_CTOCPP_H_
#pragma once

#ifndef BUILDING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed DLL-side only")
#else  // BUILDING_CEF_SHARED

#include "include/cef_web_urlrequest.h"
#include "include/capi/cef_web_urlrequest_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class CefWebURLRequestClientCToCpp
    : public CefCToCpp<CefWebURLRequestClientCToCpp, CefWebURLRequestClient,
        cef_web_urlrequest_client_t> {
 public:
  explicit CefWebURLRequestClientCToCpp(cef_web_urlrequest_client_t* str)
      : CefCToCpp<CefWebURLRequestClientCToCpp, CefWebURLRequestClient,
          cef_web_urlrequest_client_t>(str) {}
  virtual ~CefWebURLRequestClientCToCpp() {}

  // CefWebURLRequestClient methods
  virtual void OnStateChange(CefRefPtr<CefWebURLRequest> requester,
      RequestState state) OVERRIDE;
  virtual void OnRedirect(CefRefPtr<CefWebURLRequest> requester,
      CefRefPtr<CefRequest> request,
      CefRefPtr<CefResponse> response) OVERRIDE;
  virtual void OnHeadersReceived(CefRefPtr<CefWebURLRequest> requester,
      CefRefPtr<CefResponse> response) OVERRIDE;
  virtual void OnProgress(CefRefPtr<CefWebURLRequest> requester,
      uint64 bytesSent, uint64 totalBytesToBeSent) OVERRIDE;
  virtual void OnData(CefRefPtr<CefWebURLRequest> requester, const void* data,
      int dataLength) OVERRIDE;
  virtual void OnError(CefRefPtr<CefWebURLRequest> requester,
      ErrorCode errorCode) OVERRIDE;
};

#endif  // BUILDING_CEF_SHARED
#endif  // CEF_LIBCEF_DLL_CTOCPP_WEB_URLREQUEST_CLIENT_CTOCPP_H_

